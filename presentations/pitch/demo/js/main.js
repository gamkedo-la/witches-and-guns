!function(t){var e={};function s(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)s.d(i,o,function(e){return t[e]}.bind(null,o));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);const i={id:"gameCanvas",canvas:null,context:null},o={images:[{id:"player",src:"./images/julhilde.png"},{id:"broomEnemy",src:"./images/broom-enemy.png"},{id:"floorTile",src:"./images/tiles/dungeon-floor.png"}],sounds:[{id:"shoot",src:"./sounds/shoot"}]},n="probably"==(new Audio).canPlayType("audio/mp3")?"mp3":"ogg";class r{constructor(t,e){this.filePath=t,this.soundIndex=0,this.sounds=[this.getAudio(),this.getAudio()],this.sounds[this.soundIndex].addEventListener("canplay",e)}getAudio(t){return new Audio(`${this.filePath}.${n}`)}play(){this.sounds[this.soundIndex].paused||this.sounds.splice(this.soundIndex,0,this.getAudio()),this.sounds[this.soundIndex].currentTime=0,this.sounds[this.soundIndex].play(),this.soundIndex=++this.soundIndex%this.sounds.length}}const a=new class{constructor(){this.assets={images:{},sounds:{}},this.assetDefs=[];for(const[t,e]of Object.entries(o))for(const s of e)s.type=t,this.assetDefs.push(s)}loadAssets(){return Promise.all(this.assetDefs.map(t=>new Promise((e,s)=>{if("images"==t.type){const i=new Image;i.onload=()=>e({id:t.id,asset:i,type:t.type}),i.onerror=()=>s(i),i.src=t.src}else if("sounds"==t.type){const s=new r(t.src,()=>e({id:t.id,asset:s,type:t.type}))}}))).then(t=>{t.forEach(t=>{this.assets[t.type][t.id]=t.asset}),Object.freeze(this.assets)})}getImage(t){return this.assets.images[t]}getSound(t){return this.assets.sounds[t]}};class h{constructor(){this.player=null,this.reset()}update(t){this.previousState=Object.assign({},this.currentState)}reset(){this.currentState={};for(const t of u)this.currentState[t]=!1;this.previousState=Object.assign({},this.currentState)}}const l=["F12"];class c extends h{constructor(){super(),this.name="Keyboard & Mouse",this.mouseButtonHeld=!1,this.mousePos={x:null,y:null},document.addEventListener("keydown",t=>{t.defaultPrevented||(l.includes(t.code)||t.preventDefault(),this.flipState(t.code,!0))}),document.addEventListener("keyup",t=>{t.defaultPrevented||(t.preventDefault(),this.flipState(t.code,!1))}),i.canvas.addEventListener("mousemove",t=>{this.updateMousePos(t)}),i.canvas.addEventListener("mousedown",t=>{this.mouseButtonHeld=!0}),i.canvas.addEventListener("mouseup",t=>{this.mouseButtonHeld=!1})}updateMousePos(t){const e=t.target.getBoundingClientRect(),s=t.target.width/e.width,i=t.target.height/e.height,o=document.documentElement;this.mousePos.x=s*(t.clientX-e.left-o.scrollLeft),this.mousePos.y=i*(t.clientY-e.top-o.scrollTop)}flipState(t,e){switch(t){case"ArrowUp":case"KeyW":this.currentState.up=e;break;case"ArrowDown":case"KeyS":this.currentState.down=e;break;case"ArrowLeft":case"KeyA":this.currentState.left=e;break;case"ArrowRight":case"KeyD":this.currentState.right=e;break;case"KeyC":this.currentState.credits=e;break;case"KeyP":this.currentState.pause=e;break;case"KeyM":this.currentState.mute=e;case"Enter":this.currentState.start=e;break;case"KeyQ":this.currentState.debug=e}}update(t){if(super.update(t),this.mouseButtonHeld){if(null!=this.player){Math.round(this.player.x+this.player.width/2),Math.round(this.player.y+this.player.height/2);this.currentState.shootLeft=this.mousePos.x<this.player.pos.x-1,this.currentState.shootRight=this.mousePos.x>this.player.pos.x+this.player.width+1,this.currentState.shootUp=this.mousePos.y<this.player.pos.y-1,this.currentState.shootDown=this.mousePos.y>this.player.pos.y+this.player.height+1}}else this.currentState.shootLeft=!1,this.currentState.shootRight=!1,this.currentState.shootUp=!1,this.currentState.shootDown=!1}}class d extends h{constructor(t){super(),this.gamepad=t,this.name="Gamepad "+t.index,this.heldButtons=new Set,console.log("%s - CONNECTED %s",window.performance&&window.performance.now?window.performance.now():(new Date).getTime(),t)}update(t){const e=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads():[];for(const t of e)if(t.index===this.gamepad.index){this.gamepad=t;break}super.update(t),this.gamepad.axes.length>=2&&(this.currentState.left=this.gamepad.axes[0]<-.2,this.currentState.right=this.gamepad.axes[0]>.2,this.currentState.up=this.gamepad.axes[1]<-.2,this.currentState.down=this.gamepad.axes[1]>.2),this.gamepad.axes.length>=4&&(this.currentState.shootLeft=this.gamepad.axes[2]<-.2,this.currentState.shootRight=this.gamepad.axes[2]>.2,this.currentState.shootUp=this.gamepad.axes[3]<-.2,this.currentState.shootDown=this.gamepad.axes[3]>.2),this.gamepad.buttons.forEach((t,e)=>{1==t||"object"==typeof t&&t.pressed?(this.currentState.start=!this.heldButtons.has(e),this.heldButtons.add(e)):this.heldButtons.delete(e)})}}const u=["start","pause","mute","credits","debug","left","right","up","down","left","right","shootUp","shootDown","shootLeft","shootRight","gamepadConnected","gamepadDisconnected"];const p=new class{constructor(){this.listeners={};for(const t of u)this.listeners[t]=[];this.controls={},this.defaultControl=null,this.primaryControl=null}initialize(){this.controls.keyboardAndMouse=new c,this.defaultControl=this.controls.keyboardAndMouse,window.addEventListener("gamepadconnected",t=>{const e="gamepad"+t.gamepad.index;if(void 0===this.controls[e]){this.controls[e]=new d(t.gamepad);for(const t of this.listeners.gamepadConnected)t(this.controls[e])}}),window.addEventListener("gamepaddisconnected",t=>{const e="gamepad"+t.gamepad.index;if(void 0!==this.controls[e]){this.controls[e]=new d(t.gamepad);for(const t of this.listeners.gamepadDisconnected)t(this.controls[e]);delete this.controls[e]}})}reset(){for(const t in this.listeners)this.listeners[t]=[];this.on(["start","gamepadConnected"],t=>{null===this.primaryControl&&(this.primaryControl=t)}),this.on("debug",t=>{window.debugMode=!window.debugMode,console.log("Debug mode %s",window.debugMode?"enabled":"disabled")});for(const t of Object.values(this.controls))t.reset()}on(t,e){("string"==typeof t||t instanceof String)&&(t=[t]);for(const s of t)this.listeners[s].push(e)}update(t){for(const e of Object.values(this.controls)){for(const[t,s]of Object.entries(e.currentState))if(s&&!e.previousState[t])for(const s of this.listeners[t])s(e);e.update(t)}}};class m{constructor(t,e,s,i,o,n,r){this.sheetId=t,this.frameTime=e/1e3,this.frames=s,this.xOffset=i,this.yOffset=o,this.frameWidth=n,this.frameHeight=r,this.reset()}reset(){this.timer=0,this.playing=!1,this.currentFrameIndex=0}draw(t,e,s){t.drawImage(a.getImage(this.sheetId),this.xOffset*this.frameWidth,(this.yOffset+this.frames[this.currentFrameIndex])*this.frameHeight,this.frameWidth,this.frameHeight,e,s,this.frameWidth,this.frameHeight)}play(){this.playing=!0}stop(){this.playing=!1}update(t){this.playing&&(this.timer+=t,this.timer>=this.frameTime&&(this.timer=0,this.currentFrameIndex>=this.frames.length-1?this.currentFrameIndex=0:this.currentFrameIndex++))}}const y=new class{constructor(){this.liveEntities=new Set,this.deadEntities=new Set,this.collisionListeners={}}add(t){console.log("Add live entity",t),this.liveEntities.add(t)}kill(t){this.deadEntities.add(t),this.liveEntities.delete(t)}onCollision(t,e,s){void 0===this.collisionListeners[t+e]?this.collisionListeners[t+e]=[s]:this.collisionListeners[t+e].push(s)}update(t){for(const e of this.liveEntities)e.update(t);for(const t of this.liveEntities)if(t.needsCollisionCheck)for(const e of this.liveEntities)if(t!==e&&e.needsCollisionCheck&&t.canCollideWithTypes.has(e.type)&&t.collider.x<e.collider.x+e.collider.width&&t.collider.x+t.collider.width>e.collider.x&&t.collider.y<e.collider.y+e.collider.height&&t.collider.y+t.collider.height>e.collider.y){const s=this.collisionListeners[t.type+e.type];if(void 0!==s)for(const i of s)t.alive&&e.alive&&i(t,e)}}spawn(t,...e){const s=[...this.deadEntities].filter(e=>e instanceof t);let i;return s.length?(i=s[0],this.deadEntities.delete(i),i.reset(...e)):i=new t(...e),i.alive=!0,this.add(i),i}draw(){for(const t of this.liveEntities)t.draw()}};class f{constructor(t,e,s,i,o,n=10,r=1,a={},h=""){this.pos=Object.assign({},e),this.width=s,this.height=i,this.type=t,this.needsCollisionCheck=!1,this.collider=Object.assign({x:0,y:0},o),this.canCollideWithTypes=new Set,this.hp=n,this.damage=r,this.alive=!1,this.animations=a,this.currentAnimation=this.animations[h]||null,this.currentAnimation&&this.currentAnimation.play()}die(){this.alive=!1,y.kill(this)}hurt(t){this.hp-=t,this.hp<=0&&this.die()}reset(){}onTopWallCollision(t){}onLeftWallCollision(t){}onBottomWallCollision(t){}onRightWallCollision(t){}update(t){this.pos.x<0&&(this.pos.x=0,this.onLeftWallCollision(t)),this.pos.y<0&&(this.pos.y=0,this.onTopWallCollision(t)),this.pos.x>i.canvas.width-this.width&&(this.pos.x=i.canvas.width-this.width,this.onRightWallCollision(t)),this.pos.y>i.canvas.height-this.height&&(this.pos.y=i.canvas.height-this.height,this.onBottomWallCollision(t)),this.collider.x=this.pos.x+(this.width-this.collider.width)/2,this.collider.y=this.pos.y+(this.height-this.collider.height)/2}draw(){this.currentAnimation&&this.currentAnimation.draw(i.context,this.pos.x,this.pos.y),window.debugMode&&(this.collider.width>0||this.collider.height>0)&&(i.context.lineWidth=1,i.context.strokeStyle="magenta",i.context.strokeRect(this.collider.x,this.collider.y,this.collider.width,this.collider.height))}}class g extends f{constructor(t,e,s,i,o,n,r,a){super("enemy",t,e,s,i,o,n,r,a)}}class x extends g{constructor(t,e){super({x:t,y:e},14,26,{width:14,height:14},1,1,{walk:new m("broomEnemy",200,[0,1,2],0,0,14,26)},"walk"),this.speed=50,this.needsCollisionCheck=!0,this.canCollideWithTypes.add("playerProjectile"),this.vel={x:0,y:0},this.attackDistance=20,this.steerTimer=.5*Math.random()+.5}update(t){let e,s=Number.MAX_SAFE_INTEGER;this.currentAnimation.update(t);let i=null;const o={x:0,y:0};for(const t of[...y.liveEntities].filter(t=>"player"==t.type))e=Math.sqrt(Math.pow(t.pos.x-this.pos.x,2)+Math.pow(t.pos.y-this.pos.y,2)),e<s&&(s=e,i=t);if(this.steerTimer<=0){const t={x:0,y:0};if(null===i)console.error("Could not find player closest to %s",this);else{t.x=i.pos.x-this.pos.x,t.y=i.pos.y-this.pos.y;const e=Math.sqrt(Math.pow(t.x,2)+Math.pow(t.y,2));t.x=this.speed*t.x/e,t.y=this.speed*t.y/e}o.x=t.x-this.vel.x,o.y=t.y-this.vel.y,this.steerTimer=.5*Math.random()+1}else this.steerTimer-=t;s<this.attackDistance||(this.vel.x+=o.x,this.vel.y+=o.y,this.pos.x+=Math.round(this.vel.x*t),this.pos.y+=Math.round(this.vel.y*t)),super.update(t)}}class w extends f{constructor(t,e,s,i,o,n){super("playerProjectile"),this.needsCollisionCheck=!0,this.canCollideWithTypes.add("enemy"),this.collider.width=3,this.collider.height=3,this.reset(t,e,s,i,o,n)}reset(t,e,s,i,o,n){super.reset(),this.pos={x:t,y:e},this.vel={x:320*s+o,y:320*i+n}}update(t){super.update(t);const e={x:this.vel.x*t,y:this.vel.y*t};Math.abs(e.x)>0&&Math.abs(e.y)>0&&(e.x*=Math.SQRT1_2,e.y*=Math.SQRT1_2),this.pos.x+=Math.round(e.x),this.pos.y+=Math.round(e.y),this.collider.x=this.pos.x-1,this.collider.y=this.pos.y-1,(this.pos.x<0||this.pos.x>i.canvas.width||this.pos.y<0||this.pos.y>i.canvas.height)&&this.die()}draw(){super.draw(),i.context.fillStyle="white",i.context.fillRect(this.pos.x-2,this.pos.y-2,4,4)}}const v={down:new m("player",150,[0,1,2,3],0,0,20,32),left:new m("player",150,[0,1,2,3],1,0,20,32),up:new m("player",150,[0,1,2,3],2,0,20,32),right:new m("player",150,[0,1,2,3],3,0,20,32),downB:new m("player",150,[3,2,1,0],0,0,20,32),leftB:new m("player",150,[3,2,1,0],1,0,20,32),upB:new m("player",150,[3,2,1,0],2,0,20,32),rightB:new m("player",150,[3,2,1,0],3,0,20,32)};class S extends f{constructor(t,e,s,i="right"){super("player",{x:e,y:s},20,32,{width:12,height:24},10,1,v,i),this.reset(t,e,s)}reset(t,e=0,s=0){super.reset(),this.controller=t,this.alive=!1,this.pos={x:e,y:s},this.vel={x:0,y:0},this.aim={x:0,y:0},this.shotTimer=0}draw(){i.context&&this.currentAnimation.draw(i.context,this.pos.x,this.pos.y),super.draw()}move(t){this.controller&&(this.controller.currentState.up&&(this.vel.y=-110*t),this.controller.currentState.down&&(this.vel.y=110*t),this.controller.currentState.left&&(this.vel.x=-110*t),this.controller.currentState.right&&(this.vel.x=110*t),this.controller.currentState.right||this.controller.currentState.left||(this.vel.x=0),this.controller.currentState.up||this.controller.currentState.down||(this.vel.y=0),Math.abs(this.vel.x)>0&&Math.abs(this.vel.y)>0&&(this.vel.x*=Math.sqrt(.8),this.vel.y*=Math.sqrt(.8)),this.pos.x+=Math.round(this.vel.x),this.pos.y+=Math.round(this.vel.y))}onTopWallCollision(t){super.onTopWallCollision(t),this.vel.y=0}onLeftWallCollision(t){super.onLeftWallCollision(t),this.vel.x=0}onBottomWallCollision(t){super.onBottomWallCollision(t),this.vel.y=0}onRightWallCollision(t){super.onRightWallCollision(t),this.vel.x=0}shoot(t){this.controller&&(this.controller.currentState.shootUp?this.aim.y=-1:this.controller.currentState.shootDown?this.aim.y=1:this.aim.y=0,this.controller.currentState.shootLeft?this.aim.x=-1:this.controller.currentState.shootRight?this.aim.x=1:this.aim.x=0,this.shotTimer<=0&&(this.controller.currentState.shootUp||this.controller.currentState.shootDown||this.controller.currentState.shootLeft||this.controller.currentState.shootRight)?(this.shotTimer=1/12,y.spawn(w,this.pos.x+this.width/2,this.pos.y+this.height/2,this.aim.x,this.aim.y,this.vel.x,this.vel.y),a.getSound("shoot").play()):this.shotTimer-=t)}animate(t){const e=this.currentAnimation;this.aim.y>0?this.currentAnimation=this.vel.y>=0?this.animations.down:this.animations.downB:this.aim.y<0?this.currentAnimation=this.vel.y<=0?this.animations.up:this.animations.upB:this.vel.y>0?this.currentAnimation=this.animations.down:this.vel.y<0&&(this.currentAnimation=this.animations.up),this.aim.x>0?this.currentAnimation=this.vel.x>=0?this.animations.right:this.animations.rightB:this.aim.x<0?this.currentAnimation=this.vel.x<=0?this.animations.left:this.animations.leftB:this.vel.x>0&&0==this.aim.y?this.currentAnimation=this.animations.right:this.vel.x<0&&0==this.aim.y&&(this.currentAnimation=this.animations.left),this.currentAnimation!=e&&this.currentAnimation.reset(),0!=this.vel.x||0!=this.vel.y?this.currentAnimation.play():this.currentAnimation.stop(),this.currentAnimation.update(t)}update(t){this.controller&&this.controller.update(t),this.move(t),this.shoot(t),this.animate(t),super.update(t)}}let b;class C{constructor(){}init(){}reset(){return this}draw(){}update(t){p.update(t)}switchTo(t){p.reset(),console.log("%s - SWITCHING TO",window.performance&&window.performance.now?window.performance.now():(new Date).getTime(),t),b=t,b.reset()}}const T=[{name:"Level 1",loaded:!1,complete:!1,floorTileId:"floorTile",initialEnemies:[{cls:x,x:300,y:100},{cls:x,x:300,y:100},{cls:x,x:300,y:100},{cls:x,x:300,y:100},{cls:x,x:300,y:100},{cls:x,x:300,y:100},{cls:x,x:300,y:100},{cls:x,x:300,y:100},{cls:x,x:300,y:100},{cls:x,x:300,y:100},{cls:x,x:300,y:100},{cls:x,x:300,y:100}]}];const A={attract:new class extends C{reset(){return p.reset(),p.on(["start"],t=>{this.switchTo(A.select)}),p.on("credits",()=>{this.switchTo(A.credits)}),super.reset()}draw(){i.context.fillStyle="rgb(0, 64, 88)",i.context.fillRect(0,0,i.canvas.width,i.canvas.height),i.context.fillStyle="white",i.context.fillText("ATTRACT MODE, HIT KEY TO START PLAYING",10,i.canvas.height/2)}update(t){super.update(t)}},select:new class extends C{constructor(){super(),this.slots=[{input:null,avatar:"Julhilde",selected:!1},{input:null,avatar:"Calixto",selected:!1}],this.skippedGamePadStart=!1}selectSlot(t,e,s){t.selected=!0;const i=t.input;t.input=s,e.input==t.input&&(e.input=i,e.selected=null!=i)}reset(){return this.skippedGamePadStart=!1,this.slots[0].input=p.primaryControl,console.log("SET PRIMARY CONTROL",this.slots[0].input),this.slots[0].selected=!0,p.on("gamepadConnected",t=>{for(const e of this.slots)if(!e.selected)return e.selected=!0,void(e.input=t)}),p.on("left",t=>{this.selectSlot(this.slots[0],this.slots[1],t)}),p.on("right",t=>{this.selectSlot(this.slots[1],this.slots[0],t)}),p.on("start",t=>{if(t.name.startsWith("Gamepad")&&t==p.primaryControl&&!this.skippedGamePadStart)return void(this.skippedGamePadStart=!0);if(this.slots.filter(e=>e.input===t).length){const t=this.slots.filter(t=>t.selected);for(let e=0;e<t.length;e++){const s=t[e].input,o=y.spawn(S,s,e*(i.canvas.width-20),i.canvas.height/2,0==e?"right":"left");s.player=o}this.switchTo(A.game)}else for(const e of this.slots.filter(t=>!t.selected)){e.input=t,e.selected=!0;break}}),super.reset()}update(t){super.update(t)}draw(){i.context.fillStyle="rgb(0, 64, 88)",i.context.fillRect(0,0,i.canvas.width,i.canvas.height),i.context.fillStyle="white";const t=i.canvas.width/this.slots.length-5;this.slots.forEach((e,s)=>{i.context.lineWidth=10,i.context.strokeStyle=e.selected?"lime":"orange",i.context.strokeRect(s*t+5,5,(s+1)*t-5,i.canvas.height-5),null!=e.input&&(i.context.fillStyle="white",i.context.fillText(e.input.name,50+Math.round(i.canvas.width/2)*s,Math.round(i.canvas.height/2)))})}},game:new class extends C{constructor(){super(),this.levelIndex=0,y.onCollision("playerProjectile","enemy",(t,e)=>{e.hurt(t.damage),t.die()})}loadLevel(){const t=T[this.levelIndex];for(const e of t.initialEnemies)y.spawn(e.cls,e.x,e.y);t.loaded=!0}update(t){T[this.levelIndex].loaded||this.loadLevel(),super.update(t),y.update(t)}draw(){const t=T[this.levelIndex];if(!t.loaded)return i.context.fillStyle="rgb(0, 64, 88)",i.context.fillRect(0,0,i.canvas.width,i.canvas.height),i.context.fillStyle="white",void i.context.fillText("LOADING ...",10,i.canvas.height/2);const e=a.getImage(t.floorTileId);for(let t=0;t<i.canvas.width;t+=e.width)for(let s=0;s<i.canvas.height;s+=e.height)i.context.drawImage(e,t,s);y.draw()}},gameOver:new class extends C{},credits:new class extends C{}};b=A.attract,b.reset();let M=0,E=window.performance&&window.performance.now?window.performance.now():(new Date).getTime();function I(t){for(M+=Math.min(1,(t-E)/1e3);M>1/60;)M-=1/60,b.update(1/60);b.draw(),E=t,window.requestAnimationFrame(I)}function k(t){b.init(),window.requestAnimationFrame(I)}window.debugMode=!1,window.onload=function(){i.canvas=document.getElementById(i.id),i.context=i.canvas.getContext("2d"),p.initialize(),a.loadAssets().then(k)}}]);